// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TinyBallot.Data;

#nullable disable

namespace tinyballot.Migrations
{
    [DbContext(typeof(SimplePollContext))]
    [Migration("20220202130906_SimplePoll")]
    partial class SimplePoll
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TinyBallot.Models.Ballot", b =>
                {
                    b.Property<int>("BallotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BallotId"), 1L, 1);

                    b.Property<int>("PollId")
                        .HasColumnType("int");

                    b.Property<string>("Voter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BallotId");

                    b.HasIndex("PollId");

                    b.ToTable("Ballots");
                });

            modelBuilder.Entity("TinyBallot.Models.BallotCandidate", b =>
                {
                    b.Property<int>("BallotId")
                        .HasColumnType("int");

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.HasKey("BallotId", "CandidateId");

                    b.HasIndex("CandidateId");

                    b.ToTable("BallotCandidates");
                });

            modelBuilder.Entity("TinyBallot.Models.Candidate", b =>
                {
                    b.Property<int>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidateId"), 1L, 1);

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PollId")
                        .HasColumnType("int");

                    b.HasKey("CandidateId");

                    b.HasIndex("PollId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("TinyBallot.Models.Poll", b =>
                {
                    b.Property<int>("PollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PollId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PollId");

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("TinyBallot.Models.Ballot", b =>
                {
                    b.HasOne("TinyBallot.Models.Poll", "Poll")
                        .WithMany("Ballots")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poll");
                });

            modelBuilder.Entity("TinyBallot.Models.BallotCandidate", b =>
                {
                    b.HasOne("TinyBallot.Models.Ballot", "Ballot")
                        .WithMany("BallotCandidates")
                        .HasForeignKey("BallotId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("TinyBallot.Models.Candidate", "Candidate")
                        .WithMany("BallotCandidates")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Ballot");

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("TinyBallot.Models.Candidate", b =>
                {
                    b.HasOne("TinyBallot.Models.Poll", "Poll")
                        .WithMany("Candidates")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poll");
                });

            modelBuilder.Entity("TinyBallot.Models.Ballot", b =>
                {
                    b.Navigation("BallotCandidates");
                });

            modelBuilder.Entity("TinyBallot.Models.Candidate", b =>
                {
                    b.Navigation("BallotCandidates");
                });

            modelBuilder.Entity("TinyBallot.Models.Poll", b =>
                {
                    b.Navigation("Ballots");

                    b.Navigation("Candidates");
                });
#pragma warning restore 612, 618
        }
    }
}
