@model TinyBallot.Models.BallotDTO

@using System.Linq;

@{
  ViewData["Title"] = "Voting at " + Model.Poll.Name;
}

@section Styles {
<style type="text/css">
  th, td { text-align: center; }
</style>
}

<h1>@Model.Poll.Name</h1>
<hr />

<p>@Html.DisplayFor(model => model.Poll.Description)</p>

<div class="col-md-10">
  <form method="post" class="row gy-2 table-responsive">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Poll"/>
    <input type="hidden" asp-for="PollId"/>
    <div>
      <table class="table table-striped">
        <tr>
          @foreach (var c in Model.Poll.Candidates)
          {
          <th>@Html.DisplayFor(model => c.Label)</th>
          }
        </tr>
        <tr>
          @foreach (var c in Model.Poll.Candidates)
          {
          <td><input name="@nameof(Model.Candidates)" type="checkbox" value="@c.CandidateId" @(Model.Candidates.Contains(c.CandidateId)?"checked":"")/></td>
          }
        </tr>
      </table>
    </div>
    <div class="col-md-4">
      <label asp-for="Voter" class="form-label"></label>
      <input asp-for="Voter" class="form-control" />
      <span asp-validation-for="Voter" class="text-danger"></span>
    </div>
    <div>
      <button type="submit" class="btn btn-primary">Votar!</button>
    </div>
  </form>
</div>
