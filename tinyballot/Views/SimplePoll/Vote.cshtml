@model Tuple<TinyBallot.Models.PollHeaderDTO,TinyBallot.Models.BallotDTO>

@using System.Linq;

@{
  ViewData["Title"] = "Voting at " + Model.Item1.Name;

  var PollId = Model.Item2.PollId;
  var Candidates = Model.Item2.Candidates;
  var Voter = Model.Item2.Voter;
}

@section Styles {
<style type="text/css">
  th, td { text-align: center; }
</style>
}

<h1>@Model.Item1.Name</h1>
<hr />

<p>@Html.DisplayFor(model => model.Item1.Description)</p>

<div class="col-md-10">
  <form method="post" class="row gy-2 table-responsive">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="@PollId"/>
    <div>
      <table class="table table-striped">
        <tr>
          @foreach (var c in Model.Item1.Candidates)
          {
          <th>@Html.DisplayFor(model => c.Label)</th>
          }
        </tr>
        <tr>
          @foreach (var c in Model.Item1.Candidates)
          {
          <td><input name="@nameof(Candidates)" type="checkbox" value="@c.CandidateId" checked="@Model.Item2.Candidates.Contains(c.CandidateId)" )/></td>
          }
        </tr>
      </table>
    </div>
    <div class="col-md-4">
      <label asp-for="@Voter" class="form-label"></label>
      <input asp-for="@Voter" class="form-control" />
      <span asp-validation-for="@Voter" class="text-danger"></span>
    </div>
    <div>
      <button type="submit" class="btn btn-primary">Votar!</button>
    </div>
  </form>
</div>
